Kit, Generally
--------------
- Check for Items with Unsatisfied Kit Requests barfs: KitThing has no attribute 'satisfies'.
- No editing of assignment
- Show we just use the kit_usage lists for the item and room, filtered accordingly?
- Things, Bundles and Requests are the only things we use object_list.html for, on AllView.
  Time to get rid of that?

- Current links:
	- Item:
		list_kitrequests.html
		list_kititemassignments.html
		Add Kit request to item	add_kitrequest_to_item
		Add Kit bundle to item	add_kitbundle_to_item
		add kit thing to item	add_kitthing_to_item
	- Room:
		list_kitroomassignments.html
		Add kit bundle to room	add_kitbundle_to_room
		Add kit thing to room	add_kitthing_to_room
	- Bundle
		Doesn't have add-to for anything
	- Thing
		Doesn't have add-to for anything
	- Request
		Now lists items making the request.
	- Usage
		kit_usage.html
		list_kitroomassignments.html
		list_kititemassignments.html
		list_kitrequests.html
		Now includes removal links.

- Show Item issues:
	- It would make more sense if Show Item displayed which kit requests are fulfilled, and by
	  what - room or item assignment.
	- Adding something to the item doesn't default to the item.
- Show Room issues
	- Kit Things don't show things in terms of bundles, just lists the Thing assignments.
	- Adding something to the room doesn't default to the room.
- List Kit Requests
	- shows a kit request, but doesn't show *what* item requests it!
	- Doesn't show whether it's currently fulfilled.
	- Doesn't show how it's currently fulfilled, if it is.
	- All because it's done using an AllView on the KitRequest, with object_list.html
	  being hardcoded as the template.
	- Has an "Add new", but that shouldn't be there, because we only want to add new requests
	  to specific items.
- Show Kit Request
	- Doesn't show whether it's currently fulfilled.
	- Doesn't how show it's currently fulfilled, if it is.
- Show Bundle Issues
	- We can edit a bundle, while the bundle's assigned to something. If we then
	  remove the bundle from a room/item, it'll either miss something out (leaving
	  a Thing attached), or will fail to find a Thing to remove.

(We remove people from an item, using delete_itemperson, which is AfterDeleteView(model=ItemPerson);
that's a normal DeleteView, but goes to the URL in 'after', if successful. Most of the work is done
by the implicit template of itemperson_confirm_delete.html. We can use that for deleting a single
Thing assignment, but that won't help for deleting all the things in a bundle.)

Grid Issues
-----------
There have been several cons that have wanted different grid layouts
on different days, so we should recognise that. We'll need to make
some changes:
- Grids would need a ManyToManyField for ConDay, to indicate which
  day uses them.
- Grids currently assume that the ManyToManyField for Slot are consecutive
  slots, though I haven't checked what happens if they're not. Perhaps we
  should be saying that the slots must be contiguous, so that each slot's
  length fills the gap until the next slot's starting time.
- Or we could make the Slot have the ManyToManyField to the ConDay, and then
  we'd be able to assert that each possible start-time was unique. We'd be
  complicating the start-time selection, though.

Table2 Issues
-------------
- FIRST find out how the email-testing backend works, again.
- I need to finish off the Tables/Form selection, for creating lists, and checking the
  email works.
- Then I need to switch over to using the Tables properly.
- I need to change the listing of people on an item, to make use of the PersonTable stuff.


Other Things
------------
- I18N
               - Of  application
               - Of DB content
- use url in templates
	- Done, except for /admin/

- Additional checks
		- Kit clashes
		- Item requests or room assingments where there are multiple things of the same kind

- Additional reports
	- Add a generic report for each item type, showing the counts of each.

- Grid:
	- Include kit in the grids.

- Make use of User Profile/Overall con preferences in grid display.
- Revisions
- AJAX
- Regression testing
- PDF generation
               - Door listings
               - Name cards
               - Drinks forms
- XML dump
- Static pages
- Distribution mechanism (not just pushed up to github).
- Item Moves. Add when we need that.
- Revisions
	Need to model personel changes, too.
- User creation
	When we create a user, we should trigger the password-reset
	functionality, so that they get an email telling them about
	their password.

Missing Defaults:
- Availabilities should default to: first con day, last con day, etc.
- Add bundle to room - room

Missing Preferences:
- Display title on grid
Model corrections:
	- Add RoomRoutes:
		TimeWalking
		AllOnFlat
		inRadioRange

Bugs:
	- There's a problem with both Availability and Kit Requests, in that
	the same one can be assigned to multiple items; editing the object then
	changes it for every usage. We should have copy-and-save instead of edit,
	for these things, from the usual GUI
		- fix by marking them as "global"? Okay for a global instance to
		be shared. Editing a global instance bad.
	- For now, I've added a check to the Show_KitBundle page that removes the
	edit link if the bundle is in use.
	- Also applies to Room Capacities. Basically, anything that has a
	ManyToMany.

Things that need something better than the admin interface:
- The slot form: need to be able to enter a time, and have
  that converted to mins.
