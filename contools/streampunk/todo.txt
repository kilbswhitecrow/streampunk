Deleting
--------
The Remove? link for items isn't active. People doesn't have one. Have we
forgotten about deleting things on the main tables? Probably.

Kit, Generally
--------------
- object_list.html is not currently used, I believe, so should be okay to remove that. Maybe.

- Current links (all needs updating again):
	- Item:
		list_kitrequests.html
		list_kititemassignments.html
		Add Kit request to item	add_kitrequest_to_item
		Add Kit bundle to item	add_kitbundle_to_item
		add kit thing to item	add_kitthing_to_item
	- Room:
		list_kitroomassignments.html
		Add kit bundle to room	add_kitbundle_to_room
		Add kit thing to room	add_kitthing_to_room
	- Bundle
		list_kitthings.html
		list_kititemassignments.html
		list_kitroomassignments.html
		Remove Bundle		delete_kitbundle_from_item
		Remove Bundle		delete_kitbundle_from_room
	- Thing
		list_kitthings.html
		list_kititemassignments.html
		list_kitroomassignments.html
		Remove Thing		delete_kititemassignment (via DeleteView)
		Remove Thing		delete_kitroomassignment (via DeleteView)
		Remove Bundle		delete_kitbundle_from_item
		Remove Bundle		delete_kitbundle_from_room
	- Request
		Now lists items making the request.
	- Usage
		kit_usage.html
		list_kitroomassignments.html
		list_kititemassignments.html
		list_kitrequests.html
		Now includes removal links.

- Show Room issues
	- Kit Things don't show things in terms of bundles, just lists the Thing assignments.

(We remove people from an item, using delete_itemperson, which is AfterDeleteView(model=ItemPerson);
that's a normal DeleteView, but goes to the URL in 'after', if successful. Most of the work is done
by the implicit template of itemperson_confirm_delete.html. We can use that for deleting a single
Thing assignment, but that won't help for deleting all the things in a bundle.)

Grid Issues
-----------
There have been several cons that have wanted different grid layouts
on different days, so we should recognise that. We'll need to make
some changes:
- Grids would need a ManyToManyField for ConDay, to indicate which
  day uses them.
- Grids currently assume that the ManyToManyField for Slot are consecutive
  slots, though I haven't checked what happens if they're not. Perhaps we
  should be saying that the slots must be contiguous, so that each slot's
  length fills the gap until the next slot's starting time.
- Or we could make the Slot have the ManyToManyField to the ConDay, and then
  we'd be able to assert that each possible start-time was unique. We'd be
  complicating the start-time selection, though.

Table2 Issues
-------------
- Although I'm hiding the pagination outputs, the Tables are still being
created with a paginator, and so not all the tags are appearing in the
list. Need to turn this off somehow.
- The KitRequest listing is traversing through the request, to the room, to the name, etc.
This needs hacky methods in the KitRequest to work with my Rower class.
- I need to figure out how to handle the Delete links - or at least check whether deletion
is safe at the end of the link.
- I need to arrange to have the email-items-to-person, etc. in show_item and show_person.

Show person:
	- Items
	- tags
	- Availability
Show room:
	- kit room assignments
	- Items
	- Availability
Show tag:
	- Items
	- People
Show Bundle:
	- Kit Things
	- Kit Item Assignments
	- Kit Room Assignments
Show Kit Thing:
	- Kit Bundles
	- Kit Item Assignments
	- Kit Room Assignments
	- Availability
Show Kit Requetst:
	- Items making request
Kit Usage:
	- Kit Room Assignments
	- Kit Item Assignments
	- Kit Requests
Checks

So, generally:
	- How to have one of:
		multiple items per cell
		rowspan
		some kind of tree structure
	Don't think these are possible, with Tables2 - will need something else
	(unless we can do something clever with attributes).
	- Could create something different that also renders...

Other Things
------------
- I18N
               - Of  application
               - Of DB content
- use url in templates
	- Done, except for /admin/

- Additional checks
		- Kit clashes
		- Item requests or room assingments where there are multiple things of the same kind

- Additional reports
	- Add a generic report for each item type, showing the counts of each.

- Grid:
	- Include kit in the grids.

- Make use of User Profile/Overall con preferences in grid display.
	And include the ability to edit the profile - seems we're
	missing that at present, so clicking on the username in
	the banner causes an exception.
- Revisions
- AJAX
- Regression testing
- PDF generation
               - Door listings
               - Name cards
               - Drinks forms
- XML dump
- Static pages
- Distribution mechanism (not just pushed up to github).
- Item Moves. Add when we need that.
- Revisions
	Need to model personel changes, too.
- User creation
	When we create a user, we should trigger the password-reset
	functionality, so that they get an email telling them about
	their password.

Missing Defaults:
- Availabilities should default to: first con day, last con day, etc.

Missing Preferences:
- Display title on grid
Model corrections:
	- Add RoomRoutes:
		TimeWalking
		AllOnFlat
		inRadioRange

Bugs:
	- There's a problem with both Availability and Kit Requests, in that
	the same one can be assigned to multiple items; editing the object then
	changes it for every usage. We should have copy-and-save instead of edit,
	for these things, from the usual GUI
		- fix by marking them as "global"? Okay for a global instance to
		be shared. Editing a global instance bad.
	- For now, I've added a check to the Show_KitBundle page that removes the
	edit link if the bundle is in use.
	- For Kit Requests, I've removed the ability to create them *without* them
	being assigned to an item, and there isn't a way to assign them to an item
	if the kitrequest already exists, so no kit request should be used more
	than once.
	- Also applies to Room Capacities. Basically, anything that has a
	ManyToMany.

Things that need something better than the admin interface:
- The slot form: need to be able to enter a time, and have
  that converted to mins.
